{"version":3,"file":"src_app_pages_employee_employee-type_employee-type_module_ts.js","mappings":"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","sources":["./src/app/models/employeeType.ts","./src/app/pages/employee/employee-type/add-etype/add-etype.component.ts","./src/app/pages/employee/employee-type/associative-etype/associative-etype.component.ts","./src/app/pages/employee/employee-type/confirm-etype/confirm-etype.component.ts","./src/app/pages/employee/employee-type/delete-etype/delete-etype.component.ts","./src/app/pages/employee/employee-type/employee-type-routing.module.ts","./src/app/pages/employee/employee-type/employee-type.module.ts","./src/app/pages/employee/employee-type/employee-type.page.ts","./src/app/pages/employee/employee-type/update-etype/update-etype.component.ts","./src/app/pages/employee/employee-type/view-etype/view-etype.component.ts","./src/app/services/employee/employee.service.ts"],"sourcesContent":["export class EmployeeType {\r\n    employeeTypeID: number;\r\n    name: string;\r\n    description: string;\r\n    employees: [];\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder,FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, ModalController, ToastController, ViewWillEnter } from '@ionic/angular';\r\nimport { EmployeeType } from 'src/app/models/employeeType';\r\nimport { EmployeeService } from 'src/app/services/employee/employee.service';\r\nimport { RepoService } from 'src/app/services/repo.service';\r\n\r\n@Component({\r\n  selector: 'app-add-etype',\r\n  templateUrl: './add-etype.component.html',\r\n  styleUrls: ['./add-etype.component.scss'],\r\n})\r\nexport class AddEtypeComponent implements ViewWillEnter {\r\n  @Input() employeeType: EmployeeType;\r\n\r\n    //Creating the form to add the new venue details, that will be displayed in the HTML component\r\n    cEmployeeTypeForm: FormGroup = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      description: ['', [Validators.required]],\r\n    });\r\n\r\n  constructor(private modalCtrl: ModalController, private toastCtrl: ToastController, public formBuilder: FormBuilder,\r\n    public employeeService: EmployeeService, private router: Router, private  alertCtrl: AlertController) { }\r\n\r\n  //Used for validation within the form, if there are errors in the control, this method will return the errors.\r\n  get errorControl() {\r\n    return this.cEmployeeTypeForm.controls;\r\n  }\r\n\r\n  ionViewWillEnter(): void {\r\n    console.log('Add Employee Type - View Will Enter');\r\n    console.log(this.employeeType);\r\n    if (this.employeeType !=null){\r\n      this.cEmployeeTypeForm.controls.name.setValue(this.employeeType.name);\r\n      this.cEmployeeTypeForm.controls.description.setValue(this.employeeType.description);\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    if (!this.cEmployeeTypeForm.valid){\r\n      console.log('Please provide all required fields');\r\n      return false;\r\n    }else{\r\n      const temp = {\r\n        name: this.cEmployeeTypeForm.value.name,\r\n        description: this.cEmployeeTypeForm.value.description,\r\n        employees: []\r\n      };\r\n      this.employeeService.confirmEmployeeTypeModal(1,temp);\r\n      this.dismissModal();\r\n      // this.sucAdd();\r\n      // console.log(\"CurrentRoute:ADD\");\r\n      // console.log(this.currentRoute.url);\r\n    }\r\n   }\r\n\r\n   async sucAdd() {\r\n    const toast = await this.toastCtrl.create({\r\n      message: 'The Venue has been successfully added!',\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  //Once the modal has been dismissed.\r\n  dismissModal() {\r\n    this.modalCtrl.dismiss();\r\n  };\r\n\r\n  async duplicateAlert() {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Employee Type Already Exists',\r\n      message: 'The Employee Type Information entered already exists on the system',\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  async failureAlert() {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Could not create employee type',\r\n      message: 'There was an error updating the venue. Please try again',\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-associative-etype',\r\n  templateUrl: './associative-etype.component.html',\r\n  styleUrls: ['./associative-etype.component.scss'],\r\n})\r\nexport class AssociativeEtypeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { EmployeeType } from 'src/app/models/employeeType';\r\nimport { EmployeeService } from 'src/app/services/employee/employee.service';\r\nimport { VenueService } from 'src/app/services/venue/venue.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-etype',\r\n  templateUrl: './confirm-etype.component.html',\r\n  styleUrls: ['./confirm-etype.component.scss'],\r\n})\r\nexport class ConfirmEtypeComponent{\r\n  @Input() choice: number;\r\n  @Input() employeeType: EmployeeType;\r\n\r\n  constructor(private modalCtrl: ModalController, public employeeService: EmployeeService,\r\n    public router: Router, public activated: ActivatedRoute) { }\r\n\r\n    async dismissModal() {\r\n      await this.router.navigate(['../employees'],{relativeTo:this.activated});\r\n      this.modalCtrl.dismiss();\r\n    };\r\n    //1 = confirm ADD\r\n    //2 = confirm UPDATE\r\n    confirmChanges(employeeType: EmployeeType){\r\n      console.log(this.choice);\r\n      if (this.choice === 1){\r\n        //search duplicates\r\n        if (this.employeeService.matchingEmployeeType(employeeType.name) != null ||\r\n        this.employeeService.matchingEmployeeType(employeeType.description) != null)\r\n        {\r\n          console.log('Existing Employee Type: ' + employeeType.name + ' <-Name ++ Description -> ' + employeeType.description);\r\n          //display duplicate alert\r\n          //failure alert\r\n          return;\r\n        }\r\n        else {\r\n          console.log('Add Employee Type from confirm:');\r\n          //CallRepoToCreate\r\n          this.employeeService.createEmployeeType(employeeType);\r\n        }\r\n\r\n      } else if (this.choice === 2){\r\n        console.log('Update Employee Type from confirm:');\r\n        //CallRepoToUpdate\r\n        this.employeeService.updateEmployeeType(employeeType.employeeTypeID,employeeType);\r\n      }\r\n\r\n      //dismiss modal\r\n      this.dismissModal();\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertController, ModalController, ToastController, ViewWillEnter } from '@ionic/angular';\r\nimport { EmployeeType } from 'src/app/models/employeeType';\r\nimport { EmployeeService } from 'src/app/services/employee/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-etype',\r\n  templateUrl: './delete-etype.component.html',\r\n  styleUrls: ['./delete-etype.component.scss'],\r\n})\r\nexport class DeleteEtypeComponent implements ViewWillEnter {\r\n  @Input() employeeType: EmployeeType;\r\n\r\n  constructor(private modalCtrl: ModalController, private toastCtrl: ToastController, public formBuilder: FormBuilder,\r\n    public employeeService: EmployeeService, private router: Router, private route: ActivatedRoute, private alertCtrl: AlertController) { }\r\n\r\n    ionViewWillEnter() {\r\n      console.log('Delete Employee Type - View Will Enter');\r\n      console.log(this.employeeType);\r\n    }\r\n\r\n    //Send through the id of the selected venue to be deleted in the venue service.\r\n  async delete(id: number){\r\n    this.employeeService.deleteEmployeeType(id);\r\n    await this.dismissModal();\r\n    this.sucDelete();\r\n  }\r\n  async sucDelete() {\r\n    const toast = await this.toastCtrl.create({\r\n      message: 'The Employee Type has been successfully deleted!',\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async failureAlert() {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Could not delete Employee Type',\r\n      message: 'There was an error deleting the venue, please try again.',\r\n      buttons: ['OK']\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  //Close the modal and navigate back to the venue page.\r\n  async dismissModal() {\r\n    this.modalCtrl.dismiss();\r\n    console.log(this.route);\r\n    await this.router.navigate(['../employee-type'],{relativeTo: this.route});\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmployeeTypePage } from './employee-type.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmployeeTypePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EmployeeTypePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EmployeeTypePageRoutingModule } from './employee-type-routing.module';\r\n\r\nimport { EmployeeTypePage } from './employee-type.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EmployeeTypePageRoutingModule\r\n  ],\r\n  declarations: [EmployeeTypePage]\r\n})\r\nexport class EmployeeTypePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { EmployeeType } from 'src/app/models/employeeType';\r\nimport { EmployeeService } from 'src/app/services/employee/employee.service';\r\nimport { RepoService } from 'src/app/services/repo.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-type',\r\n  templateUrl: './employee-type.page.html',\r\n  styleUrls: ['./employee-type.page.scss'],\r\n})\r\nexport class EmployeeTypePage implements OnInit {\r\n  //String used from the searchbar, used in the filter pipe to search venues.\r\n  filter: string;\r\n\r\n  //Create local venue array to be populated onInit.\r\n  employeeTypeList: EmployeeType[] = [];\r\n\r\n  //Subscription variable to track live updates.\r\n  employeeTypeSub: Subscription;\r\n\r\n  isLoading = true;\r\n\r\n  constructor(public employeeService: EmployeeService, public repo: RepoService) { }\r\n\r\n  ngOnInit() {\r\n    setTimeout(async () => {\r\n      //Populate the venue list within the venue page, with the venue list from the venue service.\r\n      this.employeeTypeSub = this.employeeService.employeeTypeList.subscribe(results => {\r\n        this.employeeTypeList = results;\r\n\r\n        console.log('Venue Page Init -> Venue List');\r\n        console.log(this.employeeTypeList);\r\n      });\r\n    });\r\n    this.getEmployeeTypes();\r\n  }\r\n\r\n    //Receive venues from the repo in local page.\r\n    async getEmployeeTypes() {\r\n      setTimeout(async () => {\r\n        this.isLoading = false;\r\n        this.repo.getEmployeeTypes();\r\n        console.log('Employee Type Page -> Get Employee Types');\r\n        console.log(this.employeeTypeList);\r\n      }, 1500);\r\n    }\r\n\r\n}\r\n","/* eslint-disable @typescript-eslint/member-ordering */\r\n/* eslint-disable @typescript-eslint/dot-notation */\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertController, ModalController, ToastController, ViewWillEnter } from '@ionic/angular';\r\nimport { EmployeeType } from 'src/app/models/employeeType';\r\nimport { EmployeeService } from 'src/app/services/employee/employee.service';\r\n\r\n@Component({\r\n  selector: 'app-update-etype',\r\n  templateUrl: './update-etype.component.html',\r\n  styleUrls: ['./update-etype.component.scss'],\r\n})\r\nexport class UpdateEtypeComponent implements ViewWillEnter {\r\n  @Input() employeeType: EmployeeType;\r\n\r\n  uEmployeeTypeForm: FormGroup = new FormGroup({\r\n    name: new FormControl('', [Validators.required]),\r\n    description: new FormControl ('', [Validators.required]),\r\n  });\r\n\r\n  constructor(private modalCtrl: ModalController, private toastCtrl: ToastController, public fb: FormBuilder,\r\n    public employeeService: EmployeeService, private alertCtrl: AlertController) { }\r\n\r\n  //Used for validation within the form, if there are errors in the control, this method will return the errors.\r\n  get errorControl() {\r\n    return this.uEmployeeTypeForm.controls;\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    console.log('Update Employee Type -View Will Enter');\r\n    console.log(this.employeeType);\r\n    this.uEmployeeTypeForm.controls.venueName.setValue(this.employeeType.name);\r\n    this.uEmployeeTypeForm.controls.location.setValue(this.employeeType.description);\r\n    //Populate the update venue form with the values received from the selected venue object in the main page.\r\n}\r\nsubmitForm() {\r\n  if (!this.uEmployeeTypeForm.valid) { //If the form has any validation errors, the form will not be submitted.\r\n    console.log('Please provide all required fields');\r\n    this.InvalidAlert();\r\n    return false;\r\n  }\r\n  else\r\n  {\r\n    console.log('InsideUpdateSubmit:');\r\n    let temp = new EmployeeType();\r\n    const choice = 2;\r\n    temp = {\r\n      employeeTypeID: this.employeeType.employeeTypeID,\r\n      name: this.uEmployeeTypeForm.value['name'],\r\n      description: this.uEmployeeTypeForm.value['description'],\r\n      employees: []\r\n    };\r\n      console.log(temp);\r\n     this.employeeService.confirmEmployeeTypeModal(choice,temp);\r\n     this.dismissModal();\r\n  }\r\n}\r\n\r\nasync sucUpdate() {\r\n  const toast = await this.toastCtrl.create({\r\n    message: 'The Employee Type has been successfully updated!',\r\n    duration: 2000,\r\n    position : 'top'\r\n  });\r\n  toast.present();\r\n}\r\n\r\ndismissModal() {\r\n this.modalCtrl.dismiss(this.employeeType);\r\n}\r\n\r\nasync InvalidAlert() {\r\n  const alert = await this.alertCtrl.create({\r\n    header: 'Invalid Input',\r\n    message: 'Please provide all required fields and ensure that the information is in the correct format',\r\n    buttons: ['OK']\r\n  });\r\n  alert.present();\r\n}\r\n\r\nasync DuplicateAlert() {\r\n  const alert = await this.alertCtrl.create({\r\n    header: 'Employee Type Already Exists',\r\n    message: 'The Employee Type Information entered already exists on the system',\r\n    buttons: ['OK']\r\n  });\r\n alert.present();\r\n}\r\n\r\nasync FailureAlert() {\r\n  const alert = await this.alertCtrl.create({\r\n    header: 'Could not update Employee Type',\r\n    subHeader : 'There was an error updating the Employee Type. Please try again',\r\n    //Enter SQL Code Error here\r\n    message: 'SQL Code Error',\r\n    buttons: ['OK']\r\n  });\r\n  alert.present();\r\n}\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ModalController, ViewWillEnter } from '@ionic/angular';\r\nimport { EmployeeType } from 'src/app/models/employeeType';\r\n\r\n@Component({\r\n  selector: 'app-view-etype',\r\n  templateUrl: './view-etype.component.html',\r\n  styleUrls: ['./view-etype.component.scss'],\r\n})\r\nexport class ViewEtypeComponent implements ViewWillEnter {\r\n  @Input() employeeType: EmployeeType;\r\n\r\n  constructor(private modalCtrl: ModalController, public fb: FormBuilder) { }\r\n\r\n  ionViewWillEnter() {\r\n    console.log('view Specific Employee Type -View Will Enter');\r\n    console.log(this.employeeType);\r\n  }\r\n\r\n  dismissModal() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n}\r\n","/* eslint-disable @typescript-eslint/member-ordering */\r\n/* eslint-disable no-underscore-dangle */\r\nimport { Injectable } from '@angular/core';\r\nimport { ModalController, ToastController } from '@ionic/angular';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { EmployeeType } from 'src/app/models/employeeType';\r\nimport { AddEtypeComponent } from 'src/app/pages/employee/employee-type/add-etype/add-etype.component';\r\nimport { AssociativeEtypeComponent } from 'src/app/pages/employee/employee-type/associative-etype/associative-etype.component';\r\nimport { ConfirmEtypeComponent } from 'src/app/pages/employee/employee-type/confirm-etype/confirm-etype.component';\r\nimport { DeleteEtypeComponent } from 'src/app/pages/employee/employee-type/delete-etype/delete-etype.component';\r\nimport { UpdateEtypeComponent } from 'src/app/pages/employee/employee-type/update-etype/update-etype.component';\r\nimport { ViewEtypeComponent } from 'src/app/pages/employee/employee-type/view-etype/view-etype.component';\r\nimport { RepoService } from '../repo.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n  //Creating a venueList for all the venues in the service.\r\n  private _employeeTypeList = new BehaviorSubject<EmployeeType[]>([]);\r\n\r\n  //Return the venue list as an observable.\r\n  public get employeeTypeList() {\r\n    return this._employeeTypeList.asObservable();\r\n  }\r\n\r\n  constructor(public repo: RepoService, private modalCtrl: ModalController, private alertCtrl: ToastController) {\r\n    //Receive the venues from the repo (API).\r\n    this.repo.getEmployeeTypes().subscribe(result => {\r\n      console.log('Employee Type List: Employee Service -> Get Employee Type');\r\n      console.log(result);\r\n\r\n      const tempResult = Object.assign(result);\r\n      this._employeeTypeList.next(tempResult);\r\n\r\n      console.log('Employee Type List: Employee Service -> Updated Employee Types');\r\n      console.log(this._employeeTypeList);\r\n    });\r\n  }\r\n\r\n  //Methods\r\n  //Add a venue to the venue list within the venue service.\r\n  createEmployeeType(employeeType: any) {\r\n    console.log('Employee Service: Repo -> Create Employee Type');\r\n    console.log(JSON.stringify(employeeType));\r\n    this.repo.createEmployeeType(employeeType).subscribe(res => {\r\n      const tempResult = Object.assign(res);\r\n      console.log('Employee Service: Create Employee Type');\r\n      console.log(res);\r\n      this._employeeTypeList.next(tempResult.data);\r\n    });\r\n  }\r\n\r\n  //Receives a venue to update in the service venue list.\r\n  updateEmployeeType(id, employeeType: any) {\r\n    console.log('Employee Service: Repo -> Update Employee Type');\r\n    console.log(employeeType);\r\n\r\n    const currentEmployee = this._employeeTypeList.value;\r\n    const index = currentEmployee.findIndex(et => et.employeeTypeID === id);\r\n    this.repo.updateVenue(employeeType.employeeTypeID, employeeType).subscribe(result =>\r\n      console.log(result));\r\n  }\r\n\r\n  //Receives a venue to delete in the service venue list.\r\n  deleteEmployeeType(id: number) {\r\n    this.repo.deleteEmployeeType(id).subscribe(result =>\r\n      console.log(result));\r\n  }\r\n\r\n  matchingEmployeeType(input: string) {\r\n    console.log('Employee Service: Repo -> Matching Employee Type');\r\n    this.repo.getMatchEmployeeType(input);\r\n  }\r\n\r\n  existingEmployeeType(id: number) {\r\n    console.log('Employee Service: Repo -> Existing Employee Type');\r\n    this.repo.existsEmployeeType(id).subscribe(result =>\r\n      console.log(result));\r\n  }\r\n\r\n  //Modals\r\n  async addEmployeeTypeInfoModal(employeeType?: EmployeeType) {\r\n    const modal = await this.modalCtrl.create({\r\n      component: AddEtypeComponent,\r\n      componentProps: {\r\n        employeeType\r\n      }\r\n    });\r\n    await modal.present();\r\n  }\r\n\r\n  //Display the update venue modal.\r\n  //This method receives the selected venue object, from the venue page, in the modal through the componentProps.\r\n  async updateEmployeeTypeInfoModal(employeeType: EmployeeType) {\r\n    console.log('Employee Service: Update Employee Modal Call');\r\n    const modal = await this.modalCtrl.create({\r\n      component: UpdateEtypeComponent,\r\n      componentProps: {\r\n        employeeType\r\n      }\r\n    });\r\n    await modal.present();\r\n  }\r\n\r\n  //Display the delete venue modal.\r\n  //This method receives the selected venue object, from the venue page, in the modal through the componentProps.\r\n  async deleteVenueInfoModal(employeeType: EmployeeType) {\r\n    console.log('Employee Service: Delete Employee Type Modal Call');\r\n    let tempEmployee = new EmployeeType();\r\n    tempEmployee = Object.assign(employeeType);\r\n    console.log(tempEmployee);\r\n    if (tempEmployee.employees != null && tempEmployee.employees.length > 0) {\r\n      const modal = await this.modalCtrl.create({\r\n        component: AssociativeEtypeComponent,\r\n        componentProps: {\r\n          employeeType: tempEmployee\r\n        }\r\n      });\r\n      await modal.present();\r\n    } else {\r\n      const modal = await this.modalCtrl.create({\r\n        component: DeleteEtypeComponent,\r\n        componentProps: {\r\n          employeeType: tempEmployee\r\n        }\r\n      });\r\n\r\n      //Update the current venue list with the venue list from the delete modal.\r\n      modal.onDidDismiss().then(() => {\r\n        this.repo.getEmployeeTypes().subscribe(result => {\r\n          const tempResult = Object.assign(result);\r\n          this._employeeTypeList.next(tempResult);\r\n          console.log('Updated employee type list: Employee Service: delete employee type');\r\n          console.log(this._employeeTypeList);\r\n        });\r\n      });\r\n      await modal.present();\r\n    }\r\n  }\r\n  //Display the view venue modal.\r\n  //This method receives the selected venue object, from the venue page, in the modal through the componentProps.\r\n  async viewEmployeeTypeInfoModal(employeeType: EmployeeType) {\r\n    console.log('Employee Service: View Employee Type Modal Call');\r\n    let tempEmployeeType = new EmployeeType();\r\n    tempEmployeeType = Object.assign(employeeType);\r\n    console.log(tempEmployeeType);\r\n    const modal = await this.modalCtrl.create({\r\n      component: ViewEtypeComponent,\r\n      componentProps: {\r\n        employeeType: tempEmployeeType\r\n      }\r\n    });\r\n    await modal.present();\r\n  }\r\n\r\n  //Display the confirm create/update modal\r\n  //Receives the selected venue from the venue page\r\n  async confirmEmployeeTypeModal(selection: number, employeeType: any) {\r\n    console.log('Employee Service: Confirm Employee Type Modal Call');\r\n    console.log(selection);\r\n    if (selection === 1) {\r\n      console.log('Performing ADD');\r\n      let tempEmployeeType = new EmployeeType();\r\n      tempEmployeeType.employeeTypeID = 0;\r\n      tempEmployeeType = Object.assign(employeeType);\r\n      console.log(tempEmployeeType);\r\n      const modal = await this.modalCtrl.create({\r\n        component: ConfirmEtypeComponent,\r\n        componentProps: {\r\n          employeeType: tempEmployeeType,\r\n          choice: selection\r\n        }\r\n      });\r\n\r\n      //Update the current venue list with the venue list from the confirm modal.\r\n      modal.onDidDismiss().then(() => {\r\n        this.repo.getEmployeeTypes().subscribe(result => {\r\n          const tempResult = Object.assign(result);\r\n          this._employeeTypeList.next(tempResult);\r\n          console.log('Updated employee type list: Employee Service: confirm employee');\r\n          console.log(this._employeeTypeList);\r\n        });\r\n      });\r\n      await modal.present();\r\n    } else if (selection === 2) {\r\n      console.log('Performing UPDATE');\r\n      let tempEmployeeType = new EmployeeType();\r\n      tempEmployeeType = Object.assign(employeeType);\r\n      console.log(tempEmployeeType);\r\n      const modal = await this.modalCtrl.create({\r\n        component: ConfirmEtypeComponent,\r\n        componentProps: {\r\n          employeeType: tempEmployeeType,\r\n          choice: selection\r\n        }\r\n      });\r\n      modal.onDidDismiss().then(() => {\r\n        this.repo.getEmployeeTypes().subscribe(result => {\r\n          const tempResult = Object.assign(result);\r\n          this._employeeTypeList.next(tempResult);\r\n          console.log('Updated employee type list: Employee Service: Update confirm employee');\r\n          console.log(this._employeeTypeList);\r\n        });\r\n      });\r\n      await modal.present();\r\n    } else {\r\n      console.log('BadOption: ' + selection);\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}