{"version":3,"file":"src_app_pages_employee_qualification-type_qualification-type_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEW;AAElE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2EAAqB;KACjC;CACF,CAAC;IAMW,kCAAkC,SAAlC,kCAAkC;CAAG;AAArC,kCAAkC;IAJ9C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,kCAAkC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBN;AACM;AACF;AAEA;AACW;AAEiC;AAEvB;IAYrD,2BAA2B,SAA3B,2BAA2B;CAAG;AAA9B,2BAA2B;IAVvC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kGAAkC;YAClC,kEAAmB;SACpB;QACD,YAAY,EAAE,CAAC,2EAAqB,CAAC;KACtC,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACrBqB;AAID;AACgC;IAO/E,qBAAqB,SAArB,qBAAqB;IAalC,YAAmB,oBAA0C,EAAS,IAAiB;QAApE,yBAAoB,GAApB,oBAAoB,CAAsB;QAAS,SAAI,GAAJ,IAAI,CAAa;QATvF,kDAAkD;QAClD,0BAAqB,GAAwB,EAAE,CAAC;QAKhD,cAAS,GAAG,IAAI,CAAC;IAG0E,CAAC;IAE5F,QAAQ;QACN,UAAU,CAAC,GAAS,EAAE,CAAC;YACrB,uIAAuI;YACvI,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBAC9F,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;gBAErC,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;gBACvE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACL,CAAC,EAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,8DAA8D;IACxD,qBAAqB;;YACzB,UAAU,CAAC,GAAS,EAAE,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,MAAM,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAExC,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;gBAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAC1C,CAAC,GAAE,IAAI,CAAC,CAAC;QACX,CAAC;KAAA;CAqBA;;YAjEQ,sGAAoB;YADpB,sEAAW;;AAQP,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,+EAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA0DjC;AA1DiC","sources":["./src/app/pages/employee/qualification-type/qualification-type-routing.module.ts","./src/app/pages/employee/qualification-type/qualification-type.module.ts","./src/app/pages/employee/qualification-type/qualification-type.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { QualificationTypePage } from './qualification-type.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QualificationTypePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class QualificationTypePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\nimport { QualificationTypePageRoutingModule } from './qualification-type-routing.module';\r\n\r\nimport { QualificationTypePage } from './qualification-type.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    QualificationTypePageRoutingModule,\r\n    Ng2SearchPipeModule\r\n  ],\r\n  declarations: [QualificationTypePage]\r\n})\r\nexport class QualificationTypePageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IonItemSliding, ViewWillEnter } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { QualificationType } from 'src/app/models/qualification-type';\r\nimport { RepoService } from 'src/app/services/repo.service';\r\nimport { QualificationService } from 'src/app/services/qualification/qualification.service';\r\n\r\n@Component({\r\n  selector: 'app-qualification-type',\r\n  templateUrl: './qualification-type.page.html',\r\n  styleUrls: ['./qualification-type.page.scss'],\r\n})\r\nexport class QualificationTypePage implements OnInit {\r\n//String used from the searchbar, used in the filter pipe to search venues.\r\nfilter: string;\r\n\r\n//Create local venue array to be populated onInit.\r\nqualificationTypeList: QualificationType[] = [];\r\n\r\n//Subscription variable to track live updates.\r\nqualificationTypeSub: Subscription;\r\n\r\nisLoading = true;\r\n\r\n\r\nconstructor(public qualificationService: QualificationService, public repo: RepoService) { }\r\n\r\nngOnInit() {\r\n  setTimeout(async () => {\r\n    //Populate the qualificationtype list within the qualificationtype page, with the qulificationtype list from the qualification service.\r\n    this.qualificationTypeSub = this.qualificationService.qualificationtypeList.subscribe(results => {\r\n      this.qualificationTypeList = results;\r\n\r\n      console.log('Qualification type Page Init -> qualification type List');\r\n      console.log(this.qualificationTypeList);\r\n    });\r\n  });\r\n  this.getQualificationTypes();\r\n}\r\n\r\n//Receive qualification type list from the repo in local page.\r\nasync getQualificationTypes() {\r\n  setTimeout(async () => {\r\n    this.isLoading = false;\r\n    await this.repo.getQualificationTypes();\r\n\r\n    console.log('Qualification type Page -> Get qualification types');\r\n    console.log(this.qualificationTypeList);\r\n  }, 1500);\r\n}\r\n  // qualificationTypes = [\r\n  //   {\r\n  //     name : 'Diploma',\r\n  //   },\r\n  //   {\r\n  //     name : 'Certificate',\r\n  //   },\r\n  //   {\r\n  //     name : 'Postgraduate Study',\r\n  //   },\r\n  //   {\r\n  //     name : 'Bachelors degree',\r\n  //   }\r\n  // ];\r\n\r\n  // constructor() { }\r\n\r\n  // ngOnInit() {\r\n  // }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}